#ifndef DEFINE_H
#define DEFINE_H

//#define PRINT_MOUSE_LOCATION
#define PRINT_MOUSE_EVENT
#define PRINT_PEN
#define PRINT_DRAW
#define PRINT_ACTION // 如果定义，则调试输出所有action触发
#define PRINT_FILE_OP // 如果定义，则调试输出文件读写的过程


#define PI 3.141592653

#define BEZIER_DELTA 0.001


enum class DrawMode
{
	None, 
	Nature, 
	StraightLine,
	Circle,
	Ellipse,
	Polygon,
	Curve_Bezier
};

enum class PrimitiveType
{
	/*
	 * 用于定义存储的图元的类型
	 */
	None,
	Nature,
	StraightLine,
	Ellipse,
	Polygon,
	Curve
};


enum class StraightLineAlgorithm
{
	DDA,
	Bresenham,
	None
};

enum class CurveAlgorithm
{
	Bezier,
	B_spline
};


enum class ClearToolBarCheckedMode // 定义了对于清除工具栏选中状态的模式
{
	DrawMode,
	All
};


enum class ClipAlgorithm
{
	Cohen_Sutherland,
	Liang_Barsky
};


struct MyPoint
{
	int x;
	int y;
};

struct MyPoint_double
{
	double x;
	double y;
};

MyPoint_double operator+(const MyPoint_double left, const MyPoint_double right); // 用于两个浮点数坐标的相加
MyPoint_double operator*(const MyPoint_double left, const MyPoint_double right); // 
MyPoint_double operator*(const double left, const MyPoint_double right);

#endif // DEFINE_H